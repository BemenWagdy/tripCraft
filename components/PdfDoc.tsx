/* components/PdfDoc.tsx */
import {
  Document,
  Page,
  View,
  Text,
  StyleSheet,
  Font,
} from '@react-pdf/renderer';

/* ---------- theme ---------- */
const colors = {
  primary: '#2563eb',      // blue-600
  text:    '#111827',      // gray-900
  sub:     '#6b7280',      // gray-500
  bgRow:   '#f3f4f6',      // gray-100
};

/* ---------- styles ---------- */
const s = StyleSheet.create({
  page:        { fontFamily: 'Helvetica', padding: 40, fontSize: 10, color: colors.text },
  h1:          { fontSize: 28, fontFamily: 'Helvetica-Bold', marginBottom: 6 },
  h2:          { fontSize: 18, fontFamily: 'Helvetica-Bold', marginTop: 24, marginBottom: 6 },
  h3:          { fontSize: 14, fontFamily: 'Helvetica-Bold', marginTop: 12, marginBottom: 4 },
  p:           { marginVertical: 2, lineHeight: 1.35 },
  bulletRow:   { flexDirection: 'row', marginVertical: 1 },
  bullet:      { width: 6, height: 6, borderRadius: 3, marginTop: 4, marginRight: 4, backgroundColor: colors.primary },
  costRow:     { flexDirection: 'row', justifyContent: 'space-between', backgroundColor: colors.bgRow, padding: 4, marginTop: 6 },
  costCellL:   { fontFamily: 'Helvetica-Bold' },
  costCellR:   { fontFamily: 'Helvetica-Bold' },
  footer:      { borderTop: 1, marginTop: 16, paddingTop: 8, fontSize: 9, color: colors.sub, textAlign: 'center' },
});

/* ---------- helper ---------- */
const Bullet = ({ children }: { children: string }) => (
  <View style={s.bulletRow}>
    <View style={s.bullet} />
    <Text style={s.p}>{children}</Text>
  </View>
);

/* ---------- types ---------- */
interface DayEntry {
  text:   string;   // "Visit the Egyptian Museum …"
  cost?:  string;   // "$10"
}
interface Day {
  date:   string;   // "Mon 30 Jun"
  title:  string;   // "Arrival & Acclimation"
  items:  DayEntry[];
  dailyTotal?: string; // "$80"
}
interface PdfProps {
  destination: string;          // "Cairo, Egypt"
  dateRange:   string;          // "30 Jun – 14 Jul 2025"
  intro:       string;
  days:        Day[];
  traveller:   string;          // "Solo Traveller"
  grandTotal?: string;          // optional whole-trip figure
}

export default function PdfDoc({
  destination,
  dateRange,
  intro,
  days,
  traveller,
  grandTotal,
}: PdfProps) {
  return (
    <Document title={`TripCraft – ${destination} itinerary`}>
      <Page size="A4" style={s.page} wrap>
        {/* --- cover / header --- */}
        <Text style={s.h1}>{destination}</Text>
        <Text style={{ ...s.p, color: colors.sub }}>{dateRange}</Text>
        <Text style={{ ...s.p, marginTop: 12 }}>{intro}</Text>

        {/* --- day blocks --- */}
        {days.map((d, idx) => (
          <View key={idx} wrap={false}>
            <Text style={s.h2}>
              Day {idx + 1} · {d.title} ({d.date})
            </Text>

            {d.items.map((it, i) => (
              <Bullet key={i}>{it.text}{it.cost ? `  –  ${it.cost}` : ''}</Bullet>
            ))}

            {d.dailyTotal && (
              <View style={s.costRow}>
                <Text style={s.costCellL}>Estimated total</Text>
                <Text style={s.costCellR}>{d.dailyTotal}</Text>
              </View>
            )}
          </View>
        ))}

        {/* --- summary --- */}
        {grandTotal && (
          <View style={s.costRow}>
            <Text style={s.costCellL}>Trip estimate</Text>
            <Text style={s.costCellR}>{grandTotal}</Text>
          </View>
        )}

        {/* --- footer (auto on last page) --- */}
        <Text
          style={s.footer}
          render={({ pageNumber, totalPages }) =>
            `Generated by TripCraft for ${traveller}  ·  Page ${pageNumber}/${totalPages}`
          }
          fixed
        />
      </Page>
    </Document>
  );
}